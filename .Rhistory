setInverse <- function(solve) matx <<- solve
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getInverse()
a$set(matrix(5:8,2))
a$get()
cacheSolve(a)
cacheSolve(a)
a$getInverse()
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$set(matrix(5:8,2))
a$get()
a$getInverse()
a$set(matrix(5:8,2))
a$get()
cacheSolve(a)
cacheSolve(a)
a$getInverse()
b = a$getInverse()
a$get() %*% b
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
a$set(matrix(5:8,2))
cacheSolve(a)
cacheSolve(a)
a$getInverse()
a$get() %*% b
a <- makeCachematrix(matrix(nrow=2, ncol=2, c(2,3,4,5))
)
a <- makeCacheMatrix(matrix(nrow=2, ncol=2, c(2,3,4,5)))
a$get()
cacheSolve(a)
